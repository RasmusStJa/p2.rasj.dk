# Redirect HTTP â†’ HTTPS
server {
    listen 80;
    server_name p2.rasj.dk;
    location /.well-known/acme-challenge/ {
        root /var/www/cert-challenge;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name p2.rasj.dk;

    ssl_certificate     /etc/letsencrypt/live/p2.rasj.dk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/p2.rasj.dk/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_session_cache   shared:SSL:10m;
    ssl_prefer_server_ciphers on;

    root  /usr/share/nginx/html;
    index index.html;

    # ACME challenge (redundant here if also in HTTP, but safe)
    location /.well-known/acme-challenge/ {
        root /var/www/cert-challenge;
    }

    # Proxy API calls to backend
    # This block should handle all /api requests
    location /api/ {
        proxy_pass         http://backend:3001; # Proxy to the root of the backend service
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade; # For WebSocket support if ever needed
        proxy_set_header   Connection 'upgrade';  # For WebSocket support
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Your existing /auth/ block might be redundant if /api/ covers it,
    # or you can keep it if you need specific handling for /auth/ that differs from other /api/ routes.
    # If /auth/ is just part of your API, the /api/ block above will handle it.
    # If you remove the /auth/ block, ensure your backend routes like /api/auth/login work as expected
    # via the general /api/ proxy.
    # For example, if /api/auth/login is a backend route, it will be proxied as:
    # http://backend:3001/api/auth/login
    
    # location /auth/ { # KEEP OR REMOVE BASED ON YOUR NEEDS
    #     proxy_pass         http://backend:3001/auth/; # Be careful with trailing slashes here vs /api/
    #     proxy_http_version 1.1;
    #     proxy_set_header   Host $host;
    #     proxy_set_header   X-Real-IP $remote_addr;
    #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    # }


    # Serve SPA - This should be the last location block to catch all non-API, non-challenge routes
    location / {
        try_files $uri $uri/ /index.html;
    }
}
